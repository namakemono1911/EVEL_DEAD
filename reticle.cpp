/*****************************************************************************
reticle.cpp
Aythor	: 上野　匠
Data	: 2017_07_19
=============================================================================
Updata

*****************************************************************************/
//////////////////////////////////////////////////////////////////////////////
//ファイルインクルード
//////////////////////////////////////////////////////////////////////////////
#include "main.h"
#include "reticle.h"

//////////////////////////////////////////////////////////////////////////////
//関数名	: Reticle::init()
//返り値	: 
//説明		: 初期化
//////////////////////////////////////////////////////////////////////////////
HRESULT Reticle::init(void)
{
	mDisp = true; 
	
	setAll(
		Dvec3(SCREEN_WIDTH * 0.5f, SCREEN_HEIGHT * 0.5f, 0.f),
		Dvec3(10.f, 10.f, 0.f),
		Dvec2(0.f, 0.f),
		Dvec2(1.f, 1.f));

	loadTex("data/texture/reticle.png");

	Scene2D::init();
	return S_OK;
}

//////////////////////////////////////////////////////////////////////////////
//関数名	: Reticle::uninit()
//返り値	: 
//説明		: 初期化
//////////////////////////////////////////////////////////////////////////////
void Reticle::uninit(void)
{
	Scene2D::uninit();
}

//////////////////////////////////////////////////////////////////////////////
//関数名	: Reticle::update()
//返り値	: 
//説明		: 初期化
//////////////////////////////////////////////////////////////////////////////
void Reticle::update(void)
{
	Scene2D::update();
}

//////////////////////////////////////////////////////////////////////////////
//関数名	: Reticle::draw()
//返り値	: 
//説明		: 初期化
//////////////////////////////////////////////////////////////////////////////
void Reticle::draw(void)
{
	if (mDisp == true)
		Scene2D::draw();
}

//////////////////////////////////////////////////////////////////////////////
//関数名	: Reticle::create()
//返り値	: 
//説明		: 生成
//////////////////////////////////////////////////////////////////////////////
Reticle * Reticle::create()
{
	Reticle *reticle = new Reticle;

	reticle->init();

	return reticle;
}
